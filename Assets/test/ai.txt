tensorflow .net, 
1. 모델 로드 => predict 사용해서 반환값 연결해서 사용
   - C#을 파이썬 처럼 비슷하게 쓸 수 있음
https://github.com/SciSharp/TensorFlow.NET
https://github.com/SciSharp/Keras.NET
https://github.com/SciSharp/SciSharp-Stack-Examples
https://tensorflownet.readthedocs.io/en/latest/FrontCover.html
https://www.nuget.org/packages/Keras.NET
https://www.nuget.org/downloads

C# 예제
NuGet을 통해 TF.NET 및 TensorFlow 바이너리를 설치합니다.

### install tensorflow C#/F# binding
PM> Install-Package TensorFlow.NET
### install keras for tensorflow
PM> Install-Package TensorFlow.Keras

### Install tensorflow binary
### For CPU version
PM> Install-Package SciSharp.TensorFlow.Redist

### For GPU version (CUDA and cuDNN are required)
PM> Install-Package SciSharp.TensorFlow.Redist-Windows-GPU
프로젝트에서 TF.NET 및 Keras API를 가져옵니다.

using static Tensorflow.Binding;
using static Tensorflow.KerasApi;
using Tensorflow;
using Tensorflow.NumPy;

===================================================

barracuda onnx로 변환
2. barracuda 라이브러리를 이용해서 모델을 변환하고, 별도의 명령어 
https://docs.unity3d.com/Packages/com.unity.barracuda@1.0/manual/Loading.html
https://docs.unity3d.com/Packages/com.unity.barracuda@3.0/manual/GettingStarted.html
https://blog.naver.com/PostView.naver?blogId=tramper2&logNo=222074568771&parentCategoryNo=&categoryNo=239&viewDate=&isShowPopularPosts=true&from=search

==================================================

3. keras to onnx github reference
https://github.com/onnx/tensorflow-onnx
pip install keras2onnx

=================================================
4. 유니티 크로스플랫폼 바라쿠다 
https://pnltoen.tistory.com/entry/Unity-Barracuda-ONNX-Inference-Engine-%EC%86%8C%EA%B0%9C-%EB%B0%8F-%EC%84%A4%EC%B9%98

=================================================
정리
1. onnx 로 파일 변환
https://github.com/onnx/tensorflow-onnx/blob/main/tutorials/keras-resnet50.ipynb
-> 참고한 예시 코드( 코랩에서 실행)

!pip install tensorflow tf2onnx
!pip install onnxruntime

import os
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras.preprocessing import image
decode_predictions
import numpy as np
import tf2onnx
import onnxruntime as rt

model = tf.keras.models.load_model('already saved model Path')
# input data size 
spec = (tf.TensorSpec((None,64, 64, 3), tf.float32, name="input"),)
output_path = model.name + ".onnx"

model_proto, _ = tf2onnx.convert.from_keras(model, input_signature=spec, opset=13, output_path=output_path,)
output_names = [n.name for n in model_proto.graph.output]


2. 유니티에 barracuda 설치
https://github.com/Unity-Technologies/barracuda-release
주소가서 
패키지매니저- add git url 
https://github.com/Unity-Technologies/barracuda-release.git

( 참고: 
- Unity 2020.3 이상에서 Barracuda는 패키지 관리자 UI에 표시되지 않습니다. 
  수동으로 편집하여 활성화할 수 있습니다. 
- com.unity.barracuda2021.1부터 패키지 관리자 인터페이스를 통해 직접 패키지를 추가할 수 있습니다 )

https://docs.unity.cn/Packages/com.unity.barracuda@1.2/manual/Worker.html
https://www.youtube.com/watch?v=ggmArUbRvC4&t=290s
       
3. 유니티 바라쿠다 실행 조건 설정
       3-1. onnx 파일 asset 폴더 안에 넣기
       3-2. IWorker 인터페이스 엔진 생성하기...????
            => 구현할 메소드가 너무 많음 종류 다 찾아봐야하나...ㄷㄷㄷㄷㄷ
	    => 변수 클래스로 받아와서 직접 생성해주면 됨 .device.CPU 
       3-3. 








